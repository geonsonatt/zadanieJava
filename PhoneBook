// HotDrink.java
public class HotDrink {
    private String name;
    private int volume;

    public HotDrink(String name, int volume) {
        this.name = name;
        this.volume = volume;
    }

    public String getName() {
        return name;
    }

    public int getVolume() {
        return volume;
    }

    @Override
    public String toString() {
        return "HotDrink{" +
                "name='" + name + '\'' +
                ", volume=" + volume +
                '}';
    }
}

// HotDrinkWithTemperature.java
public class HotDrinkWithTemperature extends HotDrink {
    private int temperature;

    public HotDrinkWithTemperature(String name, int volume, int temperature) {
        super(name, volume);
        this.temperature = temperature;
    }

    public int getTemperature() {
        return temperature;
    }

    @Override
    public String toString() {
        return "HotDrinkWithTemperature{" +
                "name='" + getName() + '\'' +
                ", volume=" + getVolume() +
                ", temperature=" + temperature +
                '}';
    }
}

// VendingMachine.java
import java.util.ArrayList;
import java.util.List;

public class VendingMachine implements VendingMachineInterface {
    private List<HotDrinkWithTemperature> drinks;

    public VendingMachine() {
        this.drinks = new ArrayList<>();
    }

    public void addDrink(HotDrinkWithTemperature drink) {
        drinks.add(drink);
    }

    @Override
    public HotDrinkWithTemperature getProduct(String name, int volume, int temperature) {
        for (HotDrinkWithTemperature drink : drinks) {
            if (drink.getName().equals(name) && drink.getVolume() == volume && drink.getTemperature() == temperature) {
                return drink;
            }
        }
        return null;
    }
}

// VendingMachineInterface.java
public interface VendingMachineInterface {
    HotDrinkWithTemperature getProduct(String name, int volume, int temperature);
}

// Main.java
public class Main {
    public static void main(String[] args) {
        HotDrinkWithTemperature coffee = new HotDrinkWithTemperature("Coffee", 250, 80);
        HotDrinkWithTemperature tea = new HotDrinkWithTemperature("Tea", 200, 75);
        HotDrinkWithTemperature hotChocolate = new HotDrinkWithTemperature("Hot Chocolate", 300, 85);

        VendingMachine vendingMachine = new VendingMachine();
        vendingMachine.addDrink(coffee);
        vendingMachine.addDrink(tea);
        vendingMachine.addDrink(hotChocolate);

        HotDrinkWithTemperature requestedDrink = vendingMachine.getProduct("Tea", 200, 75);
        if (requestedDrink != null) {
            System.out.println("Dispensing: " + requestedDrink);
        } else {
            System.out.println("Requested drink not found.");
        }
    }
}